Include "MAPBASIC.DEF"
Include "ICONS.DEF"
Include "MENU.DEF"
Include "globals.def"

Declare Sub show_first_tier_nbrs_sub
Declare Sub prepare_nbr_sub
Declare Sub x_factor2_sub
Declare Sub save_tables_sub
Declare Sub check_tables_sub
Declare Sub check_layers_sub
Declare Sub ft_sub (ByVal table_to_use As String, ByVal sys_source As Integer, ByVal sys_target As Integer, ByVal single_cell As Logical, ByVal draw_cell As Logical, ByVal export_ft As Logical, first_tier_cells() As String)
Declare Sub choose_host_sub



'---------------------------------------------------
' this shows the first tier nbrs for the selected cell
'---------------------------------------------------
Sub show_first_tier_nbrs_sub
Dim select_ok, s_click, c_click As Logical
Dim x, y, x2, y2 As Float
Dim nbr_sysind, host_sysind, blank_space_num, host_row_id, nbr_row_id, count, i, j, k, m, i_found, i_row_id, i_win_id, pen1, pen2 As Integer
Dim table_selected_alias, cell_data_alias As Alias
Dim sel, sel2 As Object
Dim bucket, table_selected, finished_flag, layer1, host_val, nbr_val, found_blank, host_table, host_sys, nbr_table, nbr_sys, sitex, namex, cellx, pnx, bsicx, zcrsx, typex, htx, mdtx, edtx, azx, statusx, commentx, hbwx, sizex As String
Dim pen3 As String
Dim nbr_cnt(10) As Integer
Dim ftc(100), temp_s As String
Dim col_a As Alias
Dim in_nl As Logical
Dim temp_p As Pen




	' need to set the coord sys so that mapinfo uses the sys we select
	'-----------------------------------------------
	Run Command "Set " + proj 
	Set Distance Units "km"
	'-------------------------------------------------


	'Resets the right click menu back to choose host only for the FT case
	'-----------------------------------------------------------------------
	disable_edit = "On"
	Call choose_host_sub

	finished_flag = "Off"

	' this checks that the front window is a mapper
	'---------------------------------------------------
	i_win_id = FrontWindow()
	If WindowInfo(i_win_id, WIN_INFO_TYPE) <> WIN_MAPPER Then
		Set Map Redraw On
		Note "This tool only works on Map windows."
		Exit Sub
	End If

	' Determine the point where the user clicked and if shift or ctrl was pressed
	'------------------------------------------------------------------------------
	x = CommandInfo(CMD_INFO_X)
	y = CommandInfo(CMD_INFO_Y)
	s_click = CommandInfo(CMD_INFO_SHIFT)
	c_click = CommandInfo(CMD_INFO_CTRL)

	' the user is using the point-mode tool (this is set in the dialog in main_sub), determine how many objects are at the chosen point.
	'---------------------------------------------------
	i_found = SearchPoint(i_win_id, x, y)
	If i_found = 0 Then
		'do nothing, no objects found where the user clicked.
	Else


		'*****************************************
		'*****************************************
		'*****************************************
		'*****************************************
		'*****************************************
		'This shows the cell info, if the CTRL key was pressed while clicking					
		'-----------------------------------------------------------------------
		If c_click Then
			' Process the search results if the user clicked on an object of some kind
			'---------------------------------------------------
			For i = 1 to i_found ' searchpoint = 1 is the top object found, the max searchpoint number is the bottom object
				' Get the name of the table containing a "hit".
				'---------------------------------------------------
				table_selected_alias = SearchInfo(i, SEARCH_INFO_TABLE)
				table_selected = table_selected_alias

				' Get the row ID number of the object that was a hit.
				'---------------------------------------------------
				i_row_id = SearchInfo(i, SEARCH_INFO_ROW)	


				' this tests to see which table is open and then which has been selected
				'-------------------------------------
				select_ok = False
				For j = 1 to 10
					If sys(j) = "" Then
						Exit For
					ElseIf table_selected = cells_sys(j) Then
						select_ok = True
						Exit For
					End If

				Next

				
				' Fetch the row of the object the user clicked on.
				'------------------------------------------------------
				If select_ok = True Then
					Fetch rec i_row_id From table_selected
						cell_data_alias = table_selected + ".Site"
						sitex =  cell_data_alias
						cell_data_alias = table_selected + ".Sitename"
						namex = cell_data_alias
						cell_data_alias = table_selected + ".Cell"
						cellx = cell_data_alias
						cell_data_alias = table_selected + ".PCI_SC_BCCH_PN"
						pnx = cell_data_alias
						cell_data_alias = table_selected + ".ZCRS_BSIC"
						bsicx = cell_data_alias
						cell_data_alias = table_selected + ".ZCRS_Cnt"
						zcrsx = cell_data_alias
						cell_data_alias = table_selected + ".HT"
						htx = cell_data_alias
						cell_data_alias = table_selected + ".AZ"
						azx = cell_data_alias
						cell_data_alias = table_selected + ".MDT"
						mdtx = cell_data_alias
						cell_data_alias = table_selected + ".EDT"
						edtx = cell_data_alias
						cell_data_alias = table_selected + ".STATUS"
						statusx = cell_data_alias
						cell_data_alias = table_selected + ".Comment"
						commentx = cell_data_alias
						cell_data_alias = table_selected + ".ANT_HBW"
						hbwx = cell_data_alias
						cell_data_alias = table_selected + ".OBJ_SIZE"
						sizex = cell_data_alias
						cell_data_alias = table_selected + ".Type"
						typex = cell_data_alias

					Dialog Title "View Cells Parameters" width 180 height 290	 Position 20,40
					Control GroupBox
					Title "Cell Details" 
					Position 10, 10 Width 160 Height 55
					Control StaticText
					Title "Site:" Position 15, 20
					Control StaticText
					Title sitex Position 75, 20
					Control StaticText
					Title "Site Name:" Position 15, 35
					Control StaticText
					Title namex Position 75, 35
					Control StaticText
					Title "Cell ID:" Position 15, 50
					Control StaticText
					Title cellx Position 75, 50
					Control StaticText
					Title "Pci/Sc/Pn/Bcch:" Position 15, 75
					Control StaticText
					Title pnx Position 75, 75 
					Control StaticText
					Title "Zcrs/Bsic:" Position 15, 90
					Control StaticText
					Title bsicx Position 75, 90
					Control StaticText
					Title "Cnt:" Position 110, 90
					Control StaticText
					Title zcrsx Position 125, 90
					Control StaticText
					Title "Azimuth (deg):" Position 15, 105
					Control StaticText
					Title azx Position 75, 105
					Control StaticText
					Title "Ant HBW (deg):" Position 15, 120
					Control StaticText
					Title hbwx Position 75, 120
					Control StaticText
					Title "Object Size (m):" Position 15, 135
					Control StaticText
					Title sizex Position 75, 135
					Control StaticText
					Title "Height (m/ft):" Position 15, 150
					Control StaticText
					Title htx Position 75, 150
					Control StaticText
					Title "MDT (deg):" Position 15, 165
					Control StaticText
					Title mdtx Position 75, 165
					Control StaticText
					Title "EDT (deg):" Position 15, 180
					Control StaticText
					Title edtx Position 75, 180
					Control StaticText
					Title "Status:" Position 15, 195
					Control StaticText
					Title statusx Position 75, 195
					Control StaticText
					Title "Comments:" Position 15, 210
					Control StaticText
					Title Commentx Position 75, 210
					Control StaticText
					Title "Type:" Position 15, 225
					Control StaticText
					Title typex Position 75, 225

					Control OKButton
					Position 60, 250

					If CommandInfo(CMD_INFO_DLG_OK) = True Then
						Exit Sub
					Else
						Exit Sub
					End If
				End If
			Next





		'*****************************************
		'*****************************************
		'*****************************************
		'*****************************************
		'*****************************************
		'this is the regular nbr management mode
		'----------------------------------------------
		Else
			' Process the search results if the user clicked on an object of some kind
			'---------------------------------------------------
			Set Map Redraw Off
			For i = 1 to i_found ' searchpoint = 1 is the top object found, the max searchpoint number is the bottom object
				' Get the name of the table containing a "hit".
				'---------------------------------------------------
				table_selected_alias = SearchInfo(i, SEARCH_INFO_TABLE)
				table_selected = table_selected_alias

				' Get the row ID number of the object that was a hit.
				'---------------------------------------------------
				i_row_id = SearchInfo(i, SEARCH_INFO_ROW)	

				' this tests to see which table is open and then which has been selected
				'-------------------------------------
				select_ok = False
				For j = 1 to 10
					If sys(j) = "" Then
						Exit For
					ElseIf table_selected = cells_sys(j) Then
						host_sys = sys(j)
						host_sysind = j
						select_ok = True
						Exit For
					End If
				Next

				Call save_tables_sub


				'*****************************************
				'*****************************************
				'*****************************************
				'*****************************************
				'*****************************************
				'This is the code for selecting a new host
				'------------------------------------------
				'if the point clicked on contains an object of the table sys(x), we process it
				'---------------------------------------------------------------------------------
				If select_ok = True Then
					host_row_id = i_row_id

					' Fetch the row of the object the user clicked on.
					'---------------------------------------------------
					Fetch rec host_row_id From table_selected
					layer1 = LayerInfo( i_win_id, 1, LAYER_INFO_NAME)


					'Print important data to screen
					'---------------------------------------------------
					Print Chr$(12)
					cell_data_alias =  table_selected_alias + ".Site" 
					Print "Site: " + cell_data_alias
					cell_data_alias =  table_selected_alias + ".Sitename"
					Print "Site Name: " + cell_data_alias
					cell_data_alias =  table_selected_alias + ".Cell"
					Print "Cell ID: " + cell_data_alias
					cell_data_alias =  table_selected_alias + ".PCI_SC_BCCH_PN"
					Print "PN/SC/BCCH: " + cell_data_alias
					cell_data_alias =  table_selected_alias + ".AZ" 
					Print "Azimuth: " + cell_data_alias
					cell_data_alias =  table_selected_alias + ".MDT" 
					Print "MDT: " + cell_data_alias
					cell_data_alias =  table_selected_alias + ".EDT" 
					Print "EDT: " + cell_data_alias
					cell_data_alias =  table_selected_alias + ".HT" 
					Print "Height: " + cell_data_alias
					cell_data_alias =  table_selected_alias + ".STATUS" 
					Print "Status: " + cell_data_alias
					cell_data_alias =  table_selected_alias + ".Comment" 
					Print "Comments: " + cell_data_alias

					Call prepare_nbr_sub             'have to do this here, if you do in the pre_nbr_edit, it causes crashes if the user clicked on the nbr table before you closed it

					Select * from table_selected Where rowid = host_row_id Into query1
					Commit table query1 As pf_user_path & "nbrs_RFDT.TAB" TYPE NATIVE Charset "WindowsLatin1"
					Close Table query1
					Open Table pf_user_path + "nbrs_RFDT.TAB"
					Add Map Layer nbrs_RFDT

					' this changes the display properties of the host object in the nbrs_RFDT table
					'--------------------------------------
					Fetch First from nbrs_RFDT
					sel = nbrs_RFDT.obj
					x = centroidx(nbrs_RFDT.obj)
					y = centroidy(nbrs_RFDT.obj)
					host_val = nbrs_RFDT.cell

					'This sets the colours based on the system
					'----------------------------------------
					Alter Object sel 
					Info OBJ_INFO_BRUSH, brush_host(host_sysind)
					Alter Object sel 
					Info OBJ_INFO_PEN, pen_host(host_sysind)
					Update nbrs_RFDT
						set obj = sel where rowid = 1

					Print Chr$(12)
					Print "Thinking about the first tier cells.  Please wait."

					'goes through each target sys, tests if the user has selected it to be shown (g_ft_target_sysind(x)) and calls the ft sub with options for single cell to show only and return the ftc array
					'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
					For j = 1 to 10
						If sys(j) = "" Then
							Exit For
						ElseIf g_ft_target_sysind(j) Then
							temp_p = MakePen(3, 2, RGB(0,0,0))
							If StyleAttr(pen_nbr(j), PEN_WIDTH) = StyleAttr(temp_p, PEN_WIDTH) Then
								temp_p = MakePen(StyleAttr(pen_nbr(j), PEN_WIDTH) + 1, 2, RGB(0,0,0))
							End If

							For k = 1 to 100
								ftc(k) = ""
							Next
							If ft_draw_host_flag Then
								Call ft_sub("nbrs_RFDT",host_sysind,j,True,True,False,ftc)
							Else
								Call ft_sub("nbrs_RFDT",host_sysind,j,True,False,False,ftc)
							End If
					
							'updates the object displays and adds the ft nbrs to the nbrs table
							'--------------------------------------------------------------------
							If is_display_cells_sys(j) = True Then            ' don't think you need to test for it being open here as the display should take care of that
								'does the display of the host obj first
								'-----------------------------------------
								Fetch First From nbrs_RFDT
									sel = nbrs_RFDT.obj
								Alter Object sel 
								Info OBJ_INFO_BRUSH, brush_host(host_sysind)
								Alter Object sel 
								Info OBJ_INFO_PEN, pen_host(host_sysind)
								Update nbrs_RFDT
									set obj = sel where rowid = 1

								'then adds the ft nbrs
								'-------------------------
								nbr_cnt(j) = 0
								For k = 2 to 100		'NOTE: the ftc(1) is always the host, so do not need to display
									nbr_val =  ftc(k)
									If nbr_val <> "" and nbr_val <> "0" then	
										nbr_cnt(j) = nbr_cnt(j)+1
										Select * from cells_sys(j) where Cell = nbr_val Into query1
										If SelectionInfo(SEL_INFO_SELNAME) <> "" Then 
											Insert Into nbrs_RFDT
												Select * from query1
											Close Table query1

											'This tests if the ft nbr is in the current NL
											'----------------------------------------------
											in_nl = False
											Select * From nbrs_DB Where nbrs_DB.Host_Cell = host_val And nbrs_DB.Host_Sys = host_sys And nbrs_DB.Nbr_Cell = nbr_val And nbrs_DB.Nbr_Sys = sys(j) Into query1
											If TableInfo("query1",TAB_INFO_NROWS) > 0 Then
												in_nl = True
											End If
											Close Table query1

											If nbr_lines_flag = "On" Then
												Fetch Last From nbrs_RFDT
												x2 = centroidx(nbrs_RFDT.obj)
												y2 = centroidy(nbrs_RFDT.obj)
												sel = nbrs_RFDT.obj
												If Not in_nl Then
													Alter Object sel 
														Info OBJ_INFO_BRUSH, brush_nbr(j)
														Info OBJ_INFO_PEN, temp_p
													Print "The FT nbr(" & nbr_val & ") is not in the current NL of " & host_val
												Else
													Alter Object sel 
														Info OBJ_INFO_BRUSH, brush_nbr(j)
														Info OBJ_INFO_PEN, pen_nbr(j)
												End If
												Update nbrs_RFDT
													set obj = sel where rowid = nbrs_RFDT.rowid
												sel = CreateLine(x, y, x2, y2)
												Alter Object sel 
												Info OBJ_INFO_PEN, pen_connector(j)
												Insert Into nbrs_RFDT (Cell, System, obj)
													Values (nbr_val,sys(j),sel)
											Else
												Fetch Last from nbrs_RFDT
												sel = nbrs_RFDT.obj
												If Not in_nl Then
													Alter Object sel 
														Info OBJ_INFO_BRUSH, brush_nbr(j)
														Info OBJ_INFO_PEN, temp_p
													Print "The FT nbr(" & nbr_val & ") is not in the current NL of " & host_val
												Else
													Alter Object sel 
														Info OBJ_INFO_BRUSH, brush_nbr(j)
														Info OBJ_INFO_PEN, pen_nbr(j)
												End If
												Update nbrs_RFDT
													set obj = sel where rowid = nbrs_RFDT.rowid
											End If	
										Else
											Print "This Cell(" & host_val & ") Has An Undefined Neighbor(" & nbr_val & ")"
										End If
									End If	
								Next
							End If
						End If
					Next

					'This gets out of the i loop so no more underlying objects are processed => the top sector is processed as the host only
					'-------------------------------------------------------------
					For j = 1 to 10
						If sys(j) = "" Then
							Exit For
						ElseIf is_display_cells_sys(j) Then
							Print sys(j) & ": " & nbr_cnt(j) & " nbrs"
						End If
					Next
					Exit For

				End If
			Next
		End If
	End If

End Sub
'---------------------------------------------------



