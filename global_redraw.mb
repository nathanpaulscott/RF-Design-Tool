Include "MAPBASIC.DEF"
Include "ICONS.DEF"
Include "MENU.DEF"
Include "globals.def"


Declare Sub draw_cells_algo_sub(ByVal dc_lon As Float, ByVal dc_lat As Float, ByVal dc_hbw As String, ByVal dc_size As String, ByVal dc_az As String, ByVal dc_ibs As String, dc_obj As Object)
Declare Sub global_redraw_sub
Declare Sub pre_global_redraw_sub
Declare Sub pre_global_redraw_toolbar_sub
Declare Sub prepare_nbr_sub
Declare Sub date_check_sub
Declare Sub check_tables_sub
Declare Sub save_tables_sub
Declare Sub ft_sub (ByVal table_to_use As String, ByVal sys_source As Integer, ByVal sys_target As Integer, ByVal single_cell As Logical, ByVal draw_cell As Logical, ByVal export_ft As Logical, first_tier_cells() As String)




'---------------------------------------------------
' Makes some adjustments to the menus before calling the actual sub
'---------------------------------------------------
Sub pre_global_redraw_toolbar_sub
Dim i_win_id As String


	'This cancels the sub if there is no mapper as the top window
Onerror goto no_mapper
	i_win_id = FrontWindow()
	If WindowInfo(i_win_id, WIN_INFO_TYPE) <> WIN_MAPPER Then				' we need to check this incase there are no mappers open or in front
returnpoint1:
		Exit Sub
	End If


'---------------------------------------------------
' this adds items to the right click menu when a mapper is the front window
'---------------------------------------------------
	Alter Menu Item ID 1005	Check		'choose_host_sub Check
	Alter Menu Item ID 1006	UnCheck	'add_nbr_sub UnCheck
	Alter Menu Item ID 1007	UnCheck	'del_nbr_sub UnCheck
	Alter Menu Item ID 1006	Disable	'add_nbr_sub Disable
	Alter Menu Item ID 1007	Disable	'del_nbr_sub Disable
'---------------------------------------------------

	add_nbr_flag = "Off"
	del_nbr_flag = "Off"

	Call prepare_nbr_sub

	Call check_tables_sub
	
	redraw_cell = False

	Call global_redraw_sub

	Call save_tables_sub

	Close Table Selection

	Set ProgressBars On
	Set Map Redraw On
	Set Event Processing On

Exit Sub

'Error Handlers
'----------------
no_mapper:
Resume returnpoint1

End Sub
'---------------------------------------------------















'---------------------------------------------------
' Makes some adjustments to the menus before calling the actual sub
'---------------------------------------------------
Sub pre_global_redraw_sub
Dim i_win_id As String


	'This cancels the sub if there is no mapper as the top window
Onerror goto no_mapper
	i_win_id = FrontWindow()
	If WindowInfo(i_win_id, WIN_INFO_TYPE) <> WIN_MAPPER Then				' we need to check this incase there are no mappers open or in front
returnpoint1:
		Exit Sub
	End If


'---------------------------------------------------
' this adds items to the right click menu when a mapper is the front window
'---------------------------------------------------
	Alter Menu Item ID 1005	Check		'choose_host_sub Check
	Alter Menu Item ID 1006	UnCheck	'add_nbr_sub UnCheck
	Alter Menu Item ID 1007	UnCheck	'del_nbr_sub UnCheck
	Alter Menu Item ID 1006	Disable	'add_nbr_sub Disable
	Alter Menu Item ID 1007	Disable	'del_nbr_sub Disable
'---------------------------------------------------

	add_nbr_flag = "Off"
	del_nbr_flag = "Off"

	Call prepare_nbr_sub

	Call check_tables_sub

	Call global_redraw_sub

	Call save_tables_sub

	Close Table Selection

	Set ProgressBars On
	Set Map Redraw On
	Set Event Processing On

Exit Sub

'Error Handlers
'----------------
no_mapper:
Resume returnpoint1

End Sub
'---------------------------------------------------





'---------------------------------------------------
' this is the engine for global redraw
'---------------------------------------------------
Sub global_redraw_sub
Dim finalx, finaly, x, y, x2, y2, x0, Y0, oldx, oldy, multlen, newhbw, aznew, sizenew, azorig As Float
Dim i_row_id, num_rows_i, radio, i, k, h, m, mold As Integer
Dim cell_data_alias as Alias
Dim num_rows_s, sitex, namex, cellx, pnx, htx, mdtx, edtx, azx, statusx, commentx, hbwx, sizex, typex As String
Dim center, endpnt, sector1, sector2, sel, sector, temppnt As Object
Dim change_flag_sys(10), change_flag1, change_flag2 As Logical
Dim first_tier_cells(100) As String
Dim footprints_ok As logical
Dim space, start As Integer

	

'		Set Map Redraw On
'		Set Event Processing On

		Run Command "Set " + proj          ' need to set the coord sys so that mapinfo uses the sys we select
		Set Distance Units "km"

		Call date_check_sub

		space = 15
		start = 28

		If NOT redraw_cell Then		'this is the dialog bypass if we are just switching drawing systems
			' Get redraw info from the user
			'-------------------------------------
			Dialog Title "Redraw Cells Global" width 250 height 370	

			Control StaticText
			Title "System Selection" 
			Position 10, 10

			Control GroupBox
			Title "Choose the Systems to Redraw" 
			Position 10, start Width 230 Height 170

			Control Checkbox 
			Position 20, start+space*1
			Into change_flag_sys(1)
			Value False
			Control StaticText
			Title sys(1) 
			Position 35, start+space*1+1

			Control Checkbox 
			Position 20, start+space*2
			Into change_flag_sys(2)
			Value False
			Control StaticText
			Title sys(2) 
			Position 35, start+space*2+1

			Control Checkbox 
			Position 20, start+space*3
			Into change_flag_sys(3)
			Value False
			Control StaticText
			Title sys(3) 
			Position 35, start+space*3+1

			Control Checkbox 
			Position 20, start+space*4
			Into change_flag_sys(4)
			Value False
			Control StaticText
			Title sys(4) 
			Position 35, start+space*4+1

			Control Checkbox 
			Position 20, start+space*5
			Into change_flag_sys(5)
			Value False
			Control StaticText
			Title sys(5) 
			Position 35, start+space*5+1

			Control Checkbox 
			Position 20, start+space*6
			Into change_flag_sys(6)
			Value False
			Control StaticText
			Title sys(6) 
			Position 35, start+space*6+1

			Control Checkbox 
			Position 20, start+space*7
			Into change_flag_sys(7)
			Value False
			Control StaticText
			Title sys(7) 
			Position 35, start+space*7+1

			Control Checkbox 
			Position 20, start+space*8
			Into change_flag_sys(8)
			Value False
			Control StaticText
			Title sys(8) 
			Position 35, start+space*8+1

			Control Checkbox 
			Position 20, start+space*9
			Into change_flag_sys(9)
			Value False
			Control StaticText
			Title sys(9) 
			Position 35, start+space*9+1

			Control Checkbox 
			Position 20, start+space*10
			Into change_flag_sys(10)
			Value False
			Control StaticText
			Title sys(10) 
			Position 35, start+space*10+1


			Control StaticText
			Title "Redraw Settings" 
			Position 10, 210
			Control GroupBox
			Title "Cell Size" 
			Position 10, 225 Width 230 Height 50
			Control StaticText
			Title "Use" 
			Position 17, 246
			Control Checkbox 
			Position 35, 246
			Into change_flag1
			Value False
			Control RadioGroup
			Title " ; " 
			Position 55, 240 Width 15 
			Value 1
			Into radio
			Control StaticText
			Title "Multiply Cell Size by:" 
			Position 70, 240
			Control EditText
			Value "1" 
			Position 145, 240 Width 20
			Into multlen
			Control StaticText
			Title "times current size" 
			Position 170, 240
			Control StaticText
			Title "Set Cell Size to:" 

			Position 70, 255
			Control EditText
			Value "200" 
			Position 145, 255 Width 20
			Into sizenew
			Control StaticText
			Title "(m)" 
			Position 170, 255
			ID 1

			Control GroupBox
			Title "Cell Beamwitdh" 
			Position 10, 280 Width 230 Height 35
			Control StaticText
			Title "Use" 
			Position 17, 295
			Control Checkbox 
			Position 35, 295
			Into change_flag2
			Value False
			Control StaticText
			Title "Set Cell Beamwidth to:" 
			Position 70, 295
			Control EditText
			Value "65" 
			Position 145, 295 Width 20
			Into newhbw
			Control StaticText
			Title "degrees" 
			Position 170, 295
			ID 2

			Control OKButton
			Position 40, 330
			Control CancelButton
			Position 170, 330
			If CommandInfo(CMD_INFO_DLG_OK) = False Then
				Exit Sub
			End If

		Else     'here we just want to redraw without the dialog
			For i = 1 to 10
				change_flag_sys(i) = False
			Next
			For i = 1 to 10
				If sys(i) = "" Then
					Exit For
				Else
					change_flag_sys(i) = True
				End If
			Next
			change_flag1 = True
			radio = 1
			multlen = "1"
			change_flag2 = False
			newhbw = "65"

			redraw_cell = False
		End If
		
		Set Map Redraw Off
'		Set Event Processing On

		footprints_ok = False
		For i = 1 to 10
			If sys(i) = "" Then
				Exit For
			End If
			If is_open_cells_sys(i) = "On" And change_flag_sys(i) Then
				Select * From cells_sys(i) Into query1
				num_rows_s = TableInfo(query1, TAB_INFO_NROWS)
				num_rows_i = Val(num_rows_s)

				'For the footprints analysis, we call the sub here, it will update all objects in the query1 table
				'only need to recolour them after that
				'------------------------------------------------------
				If draw_cells_type = "footprints" Then
					If Not footprints_ok Then
						If Ask("Are you sure you want to redraw as footprints, it can take while?","Yes","No") Then
							footprints_ok = True
						Else
							exit sub
						End If
					End If
					'############################################################
					Call ft_sub("query1",i,i,False,True,False,first_tier_cells)
					'############################################################
					Goto footprint_next_sys
				End If

				'Here we go through each cell and draw the new object and recolour it
				'-------------------------------------------------------------------------
				Fetch First From query1
				Do While Not EOT(query1)
					sector = query1.obj
					azx = query1.Az
					sizex = query1.OBJ_SIZE
					hbwx = query1.ANT_HBW
					statusx = query1.STATUS
					finaly = query1.lat
					finalx = query1.lon
					i_row_id = query1.rowid

					' this does the changing, it also changes the az of the sectors based on the current value in the database
					'-----------------------------------
					If radio = 1 and val(sizex) < 1000000 Then           'otherwise it is set explicitly in the dialog
						sizenew = multlen * val(sizex)
					ElseIf val(sizex) > 1000000 Then          'this deals with a situation where the user put in a weird val for obj size in the cells table
						sizenew = 200							
					End If

					azorig = val(azx)

					If Not change_flag1 Then
						sizenew = val(sizex)
					End If

					If Not change_flag2 Then
						newhbw = val(hbwx)
					End If

					'this writes the changes to the database
					'---------------------------------------------------
					Update query1 
						Set OBJ_SIZE = sizenew where rowid = i_row_id

					If 	val(hbwx) <> 360 Then 'this is for non-omnis
						' this does the changing, it also changes the az of the sectors based on the current value in the database
						'-----------------------------------
						'by doing this update here, the omnis stay as omnis even if I change the hbw in the redraw dialog
						Update query1 
							Set ANT_HBW = newhbw where rowid = i_row_id
					End If

						
					'Put the draw cells code here instead of calling draw_Cell_sub to speed it up and only draw the selected cells
					'--------------------------------------------------------------------------------------------------------------
					Fetch Rec i_row_id From query1				' need to refresh these 2 values from the database as I have just changed them above
						sizex = query1.OBJ_SIZE
						hbwx = query1.ANT_HBW
						typex = query1.Type

					'now we either draw the new cell object into var sector1 or just fetch the obj from query1 (for nearest nbr) as it was already updated
					'--------------------------------------------------------------------------------------------------------------------------------------		
					'############################################
					Call draw_cells_algo_sub(finalx, finaly, hbwx, sizex, azx, typex, sector1)
					'############################################

					'this makes the on-air sites a different colour to the off-air sites
					'----------------------------------------------------
					If statusx = "On-Air" then
						Alter Object sector1 
						Info OBJ_INFO_PEN, pen_on_air(i)
						Info OBJ_INFO_Brush, brush_on_air(i)
					Else
						Alter Object sector1 
						Info OBJ_INFO_PEN, pen_not_on_air(i)
						Info OBJ_INFO_Brush, brush_not_on_air(i)
					End If	

					Update query1
						Set obj = sector1 Where rowid = i_row_id	

					mold = m
					m = Minimum(100,int(100*i_row_id/num_rows_i))
					If m <> mold Then
						Print Chr$(12)
						Print "Redrawing "+sys(i)+" cells. Please wait..."
						Print m+"% "+String$(m,"|")
					End If

					Fetch Next From query1
				Loop
				Close Table query1
			End If
footprint_next_sys:
		Next

		Print Chr$(12)
		Print "Re-drawing cells complete."

Exit Sub


'Error Handlers
'------------------


End	Sub
'---------------------------------------------------